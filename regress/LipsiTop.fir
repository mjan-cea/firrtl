;buildInfoPackage: chisel3, version: 3.1.6, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2018-12-21 23:42:51.273, builtAtMillis: 1545435771273
circuit LipsiTop : 
  module Memory : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip rdAddr : UInt<9>, rdData : UInt<8>, flip wrEna : UInt<1>, flip wrData : UInt<8>, flip wrAddr : UInt<9>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg regPC : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Memory.scala 31:18]
    reg rdAddrReg : UInt, clock with : (reset => (reset, UInt<9>("h00"))) @[Memory.scala 32:22]
    rdAddrReg <= io.rdAddr @[Memory.scala 32:22]
    wire program : UInt<8>[7] @[Memory.scala 34:20]
    program is invalid @[Memory.scala 34:20]
    program[0] <= UInt<8>("h0c7") @[Memory.scala 34:20]
    program[1] <= UInt<6>("h023") @[Memory.scala 34:20]
    program[2] <= UInt<8>("h0c0") @[Memory.scala 34:20]
    program[3] <= UInt<6>("h032") @[Memory.scala 34:20]
    program[4] <= UInt<8>("h0c1") @[Memory.scala 34:20]
    program[5] <= UInt<7>("h055") @[Memory.scala 34:20]
    program[6] <= UInt<8>("h0ff") @[Memory.scala 34:20]
    node _T_38 = bits(rdAddrReg, 7, 0) @[Memory.scala 35:32]
    node _T_40 = bits(_T_38, 2, 0)
    cmem mem : UInt<8>[256] @[Memory.scala 37:16]
    node _T_43 = bits(rdAddrReg, 7, 0) @[Memory.scala 38:27]
    infer mport data = mem[_T_43], clock @[Memory.scala 38:17]
    when io.wrEna : @[Memory.scala 39:18]
      node _T_44 = bits(io.wrAddr, 7, 0) @[Memory.scala 40:8]
      infer mport _T_45 = mem[_T_44], clock @[Memory.scala 40:8]
      _T_45 <= io.wrData @[Memory.scala 40:20]
      skip @[Memory.scala 39:18]
    node _T_46 = bits(rdAddrReg, 8, 8) @[Memory.scala 44:29]
    node _T_47 = mux(_T_46, data, program[_T_40]) @[Memory.scala 44:19]
    io.rdData <= _T_47 @[Memory.scala 44:13]
    
  module Lipsi : 
    input clock : Clock
    input reset : UInt<1>
    output io : {dout : UInt<8>, flip din : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg pcReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Lipsi.scala 42:18]
    reg accuReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Lipsi.scala 43:20]
    reg enaAccuReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Lipsi.scala 44:23]
    reg enaPcReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Lipsi.scala 46:21]
    reg funcReg : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Lipsi.scala 48:20]
    reg outReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Lipsi.scala 52:19]
    reg enaIoReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Lipsi.scala 53:21]
    inst mem of Memory @[Lipsi.scala 55:19]
    mem.io is invalid
    mem.clock <= clock
    mem.reset <= reset
    reg regInstr : UInt, clock @[Lipsi.scala 63:25]
    regInstr <= mem.io.rdData @[Lipsi.scala 63:25]
    wire wrEna : UInt<1> @[Lipsi.scala 72:19]
    wrEna is invalid @[Lipsi.scala 72:19]
    wire wrAddr : UInt<9> @[Lipsi.scala 73:20]
    wrAddr is invalid @[Lipsi.scala 73:20]
    wire rdAddr : UInt<9> @[Lipsi.scala 74:20]
    rdAddr is invalid @[Lipsi.scala 74:20]
    wire updPC : UInt<1> @[Lipsi.scala 75:19]
    updPC is invalid @[Lipsi.scala 75:19]
    mem.io.rdAddr <= rdAddr @[Lipsi.scala 77:17]
    node _T_29 = bits(wrAddr, 7, 0) @[Lipsi.scala 78:42]
    node _T_30 = cat(UInt<1>("h01"), _T_29) @[Cat.scala 30:58]
    mem.io.wrAddr <= _T_30 @[Lipsi.scala 78:17]
    node _T_31 = mux(UInt<1>("h00"), pcReg, accuReg) @[Lipsi.scala 79:23]
    mem.io.wrData <= _T_31 @[Lipsi.scala 79:17]
    mem.io.wrEna <= wrEna @[Lipsi.scala 80:16]
    wire nextPC : UInt @[Lipsi.scala 82:20]
    nextPC is invalid @[Lipsi.scala 82:20]
    wrEna <= UInt<1>("h00") @[Lipsi.scala 84:9]
    wrAddr <= mem.io.rdData @[Lipsi.scala 85:10]
    node _T_35 = cat(UInt<1>("h00"), nextPC) @[Cat.scala 30:58]
    rdAddr <= _T_35 @[Lipsi.scala 86:10]
    updPC <= UInt<1>("h01") @[Lipsi.scala 87:9]
    node _T_38 = add(pcReg, UInt<1>("h01")) @[Lipsi.scala 88:19]
    node _T_39 = tail(_T_38, 1) @[Lipsi.scala 88:19]
    nextPC <= _T_39 @[Lipsi.scala 88:10]
    when enaPcReg : @[Lipsi.scala 90:18]
      nextPC <= mem.io.rdData @[Lipsi.scala 91:12]
      skip @[Lipsi.scala 90:18]
    when updPC : @[Lipsi.scala 93:15]
      pcReg <= nextPC @[Lipsi.scala 94:11]
      skip @[Lipsi.scala 93:15]
    reg stateReg : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Lipsi.scala 98:25]
    reg exitReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Lipsi.scala 100:24]
    wire accuZero : UInt<1> @[Lipsi.scala 103:22]
    accuZero is invalid @[Lipsi.scala 103:22]
    accuZero <= UInt<1>("h00") @[Lipsi.scala 104:12]
    node _T_47 = eq(accuReg, UInt<1>("h00")) @[Lipsi.scala 105:16]
    when _T_47 : @[Lipsi.scala 105:29]
      accuZero <= UInt<1>("h01") @[Lipsi.scala 106:14]
      skip @[Lipsi.scala 105:29]
    node _T_49 = bits(mem.io.rdData, 1, 0) @[Lipsi.scala 109:30]
    node _T_51 = eq(_T_49, UInt<1>("h00")) @[Lipsi.scala 109:37]
    node _T_52 = bits(mem.io.rdData, 1, 0) @[Lipsi.scala 110:13]
    node _T_54 = eq(_T_52, UInt<2>("h02")) @[Lipsi.scala 110:20]
    node _T_55 = and(_T_54, accuZero) @[Lipsi.scala 110:33]
    node _T_56 = or(_T_51, _T_55) @[Lipsi.scala 109:50]
    node _T_57 = bits(mem.io.rdData, 1, 0) @[Lipsi.scala 111:13]
    node _T_59 = eq(_T_57, UInt<2>("h03")) @[Lipsi.scala 111:20]
    node _T_61 = eq(accuZero, UInt<1>("h00")) @[Lipsi.scala 111:36]
    node _T_62 = and(_T_59, _T_61) @[Lipsi.scala 111:33]
    node _T_63 = or(_T_56, _T_62) @[Lipsi.scala 110:46]
    wire doBranch : UInt<1> @[Lipsi.scala 109:22]
    doBranch is invalid @[Lipsi.scala 109:22]
    enaAccuReg <= UInt<1>("h00") @[Lipsi.scala 113:14]
    enaPcReg <= UInt<1>("h00") @[Lipsi.scala 114:12]
    enaIoReg <= UInt<1>("h00") @[Lipsi.scala 115:12]
    node _T_67 = eq(UInt<3>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_67 : @[Conditional.scala 40:58]
      stateReg <= UInt<3>("h01") @[Lipsi.scala 120:16]
      node _T_68 = bits(mem.io.rdData, 6, 4) @[Lipsi.scala 121:24]
      funcReg <= _T_68 @[Lipsi.scala 121:15]
      node _T_69 = bits(mem.io.rdData, 7, 7) @[Lipsi.scala 123:18]
      node _T_71 = eq(_T_69, UInt<1>("h00")) @[Lipsi.scala 123:22]
      when _T_71 : @[Lipsi.scala 123:35]
        updPC <= UInt<1>("h00") @[Lipsi.scala 124:15]
        node _T_73 = bits(mem.io.rdData, 6, 4) @[Lipsi.scala 125:26]
        funcReg <= _T_73 @[Lipsi.scala 125:17]
        enaAccuReg <= UInt<1>("h01") @[Lipsi.scala 126:20]
        node _T_76 = bits(mem.io.rdData, 3, 0) @[Lipsi.scala 127:42]
        node _T_77 = cat(UInt<5>("h010"), _T_76) @[Cat.scala 30:58]
        rdAddr <= _T_77 @[Lipsi.scala 127:16]
        skip @[Lipsi.scala 123:35]
      node _T_78 = bits(mem.io.rdData, 7, 4) @[Lipsi.scala 130:18]
      node _T_80 = eq(_T_78, UInt<4>("h08")) @[Lipsi.scala 130:25]
      when _T_80 : @[Lipsi.scala 130:40]
        wrAddr <= UInt<9>("h00") @[Lipsi.scala 131:16]
        wrEna <= UInt<1>("h01") @[Lipsi.scala 132:15]
        stateReg <= UInt<3>("h00") @[Lipsi.scala 133:18]
        skip @[Lipsi.scala 130:40]
      node _T_83 = bits(mem.io.rdData, 7, 4) @[Lipsi.scala 136:18]
      node _T_85 = eq(_T_83, UInt<4>("h0a")) @[Lipsi.scala 136:25]
      when _T_85 : @[Lipsi.scala 136:40]
        updPC <= UInt<1>("h00") @[Lipsi.scala 137:15]
        node _T_88 = bits(mem.io.rdData, 3, 0) @[Lipsi.scala 138:42]
        node _T_89 = cat(UInt<5>("h010"), _T_88) @[Cat.scala 30:58]
        rdAddr <= _T_89 @[Lipsi.scala 138:16]
        stateReg <= UInt<3>("h03") @[Lipsi.scala 139:18]
        skip @[Lipsi.scala 136:40]
      node _T_90 = bits(mem.io.rdData, 7, 4) @[Lipsi.scala 142:18]
      node _T_92 = eq(_T_90, UInt<4>("h0b")) @[Lipsi.scala 142:25]
      when _T_92 : @[Lipsi.scala 142:40]
        updPC <= UInt<1>("h00") @[Lipsi.scala 143:15]
        node _T_95 = bits(mem.io.rdData, 3, 0) @[Lipsi.scala 144:42]
        node _T_96 = cat(UInt<5>("h010"), _T_95) @[Cat.scala 30:58]
        rdAddr <= _T_96 @[Lipsi.scala 144:16]
        stateReg <= UInt<3>("h02") @[Lipsi.scala 145:18]
        skip @[Lipsi.scala 142:40]
      node _T_97 = bits(mem.io.rdData, 7, 4) @[Lipsi.scala 148:18]
      node _T_99 = eq(_T_97, UInt<4>("h0c")) @[Lipsi.scala 148:25]
      when _T_99 : @[Lipsi.scala 148:40]
        node _T_100 = bits(mem.io.rdData, 2, 0) @[Lipsi.scala 149:26]
        funcReg <= _T_100 @[Lipsi.scala 149:17]
        enaAccuReg <= UInt<1>("h01") @[Lipsi.scala 150:20]
        skip @[Lipsi.scala 148:40]
      node _T_102 = bits(mem.io.rdData, 7, 4) @[Lipsi.scala 153:18]
      node _T_104 = eq(_T_102, UInt<4>("h0d")) @[Lipsi.scala 153:25]
      when _T_104 : @[Lipsi.scala 153:40]
        when doBranch : @[Lipsi.scala 154:24]
          enaPcReg <= UInt<1>("h01") @[Lipsi.scala 155:20]
          skip @[Lipsi.scala 154:24]
        skip @[Lipsi.scala 153:40]
      node _T_107 = eq(mem.io.rdData, UInt<8>("h0f0")) @[Lipsi.scala 159:19]
      when _T_107 : @[Lipsi.scala 159:35]
        outReg <= accuReg @[Lipsi.scala 160:16]
        enaIoReg <= UInt<1>("h01") @[Lipsi.scala 161:18]
        stateReg <= UInt<3>("h00") @[Lipsi.scala 162:18]
        skip @[Lipsi.scala 159:35]
      node _T_110 = eq(mem.io.rdData, UInt<8>("h0ff")) @[Lipsi.scala 165:19]
      when _T_110 : @[Lipsi.scala 165:35]
        stateReg <= UInt<3>("h05") @[Lipsi.scala 166:18]
        skip @[Lipsi.scala 165:35]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_111 = eq(UInt<3>("h02"), stateReg) @[Conditional.scala 37:30]
      when _T_111 : @[Conditional.scala 39:67]
        wrEna <= UInt<1>("h01") @[Lipsi.scala 170:13]
        stateReg <= UInt<3>("h00") @[Lipsi.scala 171:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_113 = eq(UInt<3>("h01"), stateReg) @[Conditional.scala 37:30]
        when _T_113 : @[Conditional.scala 39:67]
          stateReg <= UInt<3>("h00") @[Lipsi.scala 174:16]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_114 = eq(UInt<3>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_114 : @[Conditional.scala 39:67]
            updPC <= UInt<1>("h00") @[Lipsi.scala 177:13]
            funcReg <= UInt<3>("h07") @[Lipsi.scala 178:15]
            enaAccuReg <= UInt<1>("h01") @[Lipsi.scala 179:18]
            node _T_119 = bits(mem.io.rdData, 7, 0) @[Lipsi.scala 180:39]
            node _T_120 = cat(UInt<1>("h01"), _T_119) @[Cat.scala 30:58]
            rdAddr <= _T_120 @[Lipsi.scala 180:14]
            stateReg <= UInt<3>("h04") @[Lipsi.scala 181:16]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_121 = eq(UInt<3>("h04"), stateReg) @[Conditional.scala 37:30]
            when _T_121 : @[Conditional.scala 39:67]
              stateReg <= UInt<3>("h00") @[Lipsi.scala 184:16]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_122 = eq(UInt<3>("h05"), stateReg) @[Conditional.scala 37:30]
              when _T_122 : @[Conditional.scala 39:67]
                exitReg <= UInt<1>("h01") @[Lipsi.scala 187:15]
                skip @[Conditional.scala 39:67]
    wire op : UInt<8> @[Lipsi.scala 191:16]
    op is invalid @[Lipsi.scala 191:16]
    wire res : UInt @[Lipsi.scala 192:17]
    res is invalid @[Lipsi.scala 192:17]
    res <= UInt<8>("h00") @[Lipsi.scala 193:7]
    node _T_127 = eq(UInt<3>("h00"), funcReg) @[Conditional.scala 37:30]
    when _T_127 : @[Conditional.scala 40:58]
      node _T_128 = add(accuReg, op) @[Lipsi.scala 197:30]
      node _T_129 = tail(_T_128, 1) @[Lipsi.scala 197:30]
      res <= _T_129 @[Lipsi.scala 197:19]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_130 = eq(UInt<3>("h01"), funcReg) @[Conditional.scala 37:30]
      when _T_130 : @[Conditional.scala 39:67]
        node _T_131 = sub(accuReg, op) @[Lipsi.scala 198:30]
        node _T_132 = asUInt(_T_131) @[Lipsi.scala 198:30]
        node _T_133 = tail(_T_132, 1) @[Lipsi.scala 198:30]
        res <= _T_133 @[Lipsi.scala 198:19]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_134 = eq(UInt<3>("h02"), funcReg) @[Conditional.scala 37:30]
        when _T_134 : @[Conditional.scala 39:67]
          node _T_135 = add(accuReg, op) @[Lipsi.scala 199:30]
          node _T_136 = tail(_T_135, 1) @[Lipsi.scala 199:30]
          res <= _T_136 @[Lipsi.scala 199:19]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_137 = eq(UInt<3>("h03"), funcReg) @[Conditional.scala 37:30]
          when _T_137 : @[Conditional.scala 39:67]
            node _T_138 = sub(accuReg, op) @[Lipsi.scala 200:30]
            node _T_139 = asUInt(_T_138) @[Lipsi.scala 200:30]
            node _T_140 = tail(_T_139, 1) @[Lipsi.scala 200:30]
            res <= _T_140 @[Lipsi.scala 200:19]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_141 = eq(UInt<3>("h04"), funcReg) @[Conditional.scala 37:30]
            when _T_141 : @[Conditional.scala 39:67]
              node _T_142 = and(accuReg, op) @[Lipsi.scala 201:30]
              res <= _T_142 @[Lipsi.scala 201:19]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_143 = eq(UInt<3>("h05"), funcReg) @[Conditional.scala 37:30]
              when _T_143 : @[Conditional.scala 39:67]
                node _T_144 = or(accuReg, op) @[Lipsi.scala 202:29]
                res <= _T_144 @[Lipsi.scala 202:18]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_145 = eq(UInt<3>("h06"), funcReg) @[Conditional.scala 37:30]
                when _T_145 : @[Conditional.scala 39:67]
                  node _T_146 = xor(accuReg, op) @[Lipsi.scala 203:30]
                  res <= _T_146 @[Lipsi.scala 203:19]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_147 = eq(UInt<3>("h07"), funcReg) @[Conditional.scala 37:30]
                  when _T_147 : @[Conditional.scala 39:67]
                    res <= op @[Lipsi.scala 204:18]
                    skip @[Conditional.scala 39:67]
    when enaAccuReg : @[Lipsi.scala 206:20]
      accuReg <= res @[Lipsi.scala 207:13]
      skip @[Lipsi.scala 206:20]
    when enaIoReg : @[Lipsi.scala 209:18]
      accuReg <= io.din @[Lipsi.scala 210:13]
      skip @[Lipsi.scala 209:18]
    io.dout <= outReg @[Lipsi.scala 213:11]
    
  module LipsiTop : 
    input clock : Clock
    input reset : UInt<1>
    output io : {dout : UInt<8>, flip din : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg _T_7 : UInt<1>, clock @[Lipsi.scala 222:34]
    _T_7 <= reset @[Lipsi.scala 222:34]
    node _T_8 = bits(_T_7, 0, 0) @[compatibility.scala 250:56]
    node _T_10 = eq(_T_8, UInt<1>("h00")) @[Lipsi.scala 222:30]
    reg resetRegs : UInt<1>, clock @[Lipsi.scala 222:22]
    resetRegs <= _T_10 @[Lipsi.scala 222:22]
    inst Lipsi of Lipsi @[Lipsi.scala 238:23]
    Lipsi.io is invalid
    Lipsi.clock <= clock
    Lipsi.reset <= reset
    Lipsi.reset <= resetRegs @[Lipsi.scala 240:17]
    io <- Lipsi.io @[Lipsi.scala 241:8]
    
